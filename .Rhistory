predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
View(compare)
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(moving_avg_3_rows(avgdaily_demand)='N/A',avgdaily_demand,
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(moving_avg_3_rows(avgdaily_demand)=='N/A',avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(moving_avg_3_rows(avgdaily_demand)=='',avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(moving_avg_3_rows(avgdaily_demand)=='',avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(moving_avg_3_rows(avgdaily_demand)=='NA',avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(moving_avg_3_rows(avgdaily_demand)=='NA',avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
day<-lm(avgdaily_demand~.,data = Mergiday)
day3<-lm(avgdaily_demand~.,data = Mergi3day)
summary(day)
summary(day3)
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
View(compare)
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(moving_avg_3_rows(avgdaily_demand)=='NA',avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(moving_avg_3_rows(avgdaily_demand)=='NA',avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(is.na(moving_avg_3_rows(avgdaily_demand)),avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
day<-lm(avgdaily_demand~.,data = Mergiday)
day3<-lm(avgdaily_demand~.,data = Mergi3day)
summary(day)
summary(day3)
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq <- function (x, y) cor(x, y) ^ 2
rsq(compare$actual,compare$predicted)
rsq(compare$actual,compare$predicted)
rsq(compare$predicted,compare$actual)
set.seed(123)
training_samples <- Merged_Data_Prevweek$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Merged_Data_Prevweek[training_samples,]
Mergi3test <- Merged_Data_Prevweek[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Merged_Data_Prevweek)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
predictions <- mod3 %>%
predict(Mergi3test)
control = Merged_Data_Prevweek %>%
select(-one_of('prevweekfall','weeknum'))
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(123)
training_samples <- control$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- control[training_samples,]
Mergi3test <- control[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=control)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
View(control)
#PrevDay
set.seed(123)
training_samples <- Mergiday$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergitrain <- Mergiday[training_samples,]
Mergitest <- Mergiday[-training_samples,]
modprev <- lm(avgdaily_demand ~., data=Mergiday)
predictions <- modprev %>%
predict(Mergitest)
compare <- data.frame(actual = Mergitest$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergitest$avgdaily_demand)
rsq(compare$actual,compare$predicted)
(lag(x,3) + lag(x,2) + lag(x,1))/3
(lag(x,2) + lag(x,1) + x)/3
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,2) + lag(x,1) + x)/3
}
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,3) + lag(x,2) + lag(x,1))/3
}
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(is.na(moving_avg_3_rows(avgdaily_demand)),avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
day<-lm(avgdaily_demand~.,data = Mergiday)
day3<-lm(avgdaily_demand~.,data = Mergi3day)
summary(day)
summary(day3)
#3 previous days
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#Control (nothing added)
control = Merged_Data_Prevweek %>%
select(-one_of('prevweekfall','weeknum'))
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(123)
training_samples <- control$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- control[training_samples,]
Mergi3test <- control[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=control)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#PrevDay
set.seed(123)
training_samples <- Mergiday$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergitrain <- Mergiday[training_samples,]
Mergitest <- Mergiday[-training_samples,]
modprev <- lm(avgdaily_demand ~., data=Mergiday)
predictions <- modprev %>%
predict(Mergitest)
compare <- data.frame(actual = Mergitest$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergitest$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,2) + lag(x,1))/3
}
IfError <- function(code, silent = FALSE) {
tryCatch(code, error = function(c) {
if (!silent) {"Error Message"}
else{code}})
}
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(is.na(moving_avg_3_rows(avgdaily_demand)),avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
day<-lm(avgdaily_demand~.,data = Mergiday)
day3<-lm(avgdaily_demand~.,data = Mergi3day)
summary(day)
#3 previous days
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,3) + lag(x,2) + lag(x,1))/3
}
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,3) + lag(x,2) + lag(x,1))/3
}
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(is.na(moving_avg_3_rows(avgdaily_demand)),avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
day<-lm(avgdaily_demand~.,data = Mergiday)
day3<-lm(avgdaily_demand~.,data = Mergi3day)
summary(day)
#3 previous days
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
rsq(compare$actual,compare$predicted)
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,2) + lag(x,1))/3
}
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(is.na(moving_avg_3_rows(avgdaily_demand)),avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,4) + lag(x,3) + lag(x,2) + lag(x,1))/3
}
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(is.na(moving_avg_3_rows(avgdaily_demand)),avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
#3 previous days
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#2 days = 0.9728684
#3 days = 0.9758512
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,5) + lag(x,4) + lag(x,3) + lag(x,2) + lag(x,1))/3
}
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(is.na(moving_avg_3_rows(avgdaily_demand)),avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
#3 previous days
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#2 days = 0.9728684
#3 days = 0.9758512
#4 days = 0.973445
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,6) + lag(x,5) + lag(x,4) + lag(x,3) + lag(x,2) + lag(x,1))/3
}
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(is.na(moving_avg_3_rows(avgdaily_demand)),avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
#3 previous days
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#2 days = 0.9728684
#3 days = 0.9758512
#4 days = 0.973445
#5 days = 0.9712492
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,1))/3
}
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(is.na(moving_avg_3_rows(avgdaily_demand)),avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
#3 previous days
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#2 days = 0.9728684
#3 days = 0.9758512
#4 days = 0.973445
#5 days = 0.9712492
#6 days = 0.9701669
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,3) + lag(x,2) + lag(x,1))/3
}
IfError <- function(code, silent = FALSE) {
tryCatch(code, error = function(c) {
if (!silent) {"Error Message"}
else{code}})
}
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(is.na(moving_avg_3_rows(avgdaily_demand)),avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
#3 previous days
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#1 day = 0.961867
#2 days = 0.9728684
#3 days = 0.9758512
#4 days = 0.973445
#5 days = 0.9712492
#6 days = 0.9701669
#3 previous days
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(124)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#1 day = 0.961867
#2 days = 0.9728684
#3 days = 0.9758512
#4 days = 0.973445
#5 days = 0.9712492
#6 days = 0.9701669
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,4) + lag(x,3) + lag(x,2) + lag(x,1))/3
}
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(is.na(moving_avg_3_rows(avgdaily_demand)),avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
#3 previous days
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(124)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#1 day = 0.961867
#2 days = 0.9728684
#3 days = 0.9758512
#4 days = 0.973445
#5 days = 0.9712492
#6 days = 0.9701669
#3 Days
moving_avg_3_rows <- function(x){
(lag(x,3) + lag(x,2) + lag(x,1))/3
}
Mergi3day = Merged_Data_Prevweek %>%
mutate(Prev3Day = ifelse(is.na(moving_avg_3_rows(avgdaily_demand)),avgdaily_demand,
moving_avg_3_rows(avgdaily_demand)))
Mergi3day = Mergi3day %>%
select(-one_of('prevweekfall','weeknum'))
#3 previous days
rsq <- function (x, y) cor(x, y) ^ 2
set.seed(123)
training_samples <- Mergi3day$avgdaily_demand %>%
createDataPartition(p = 0.7,list = FALSE)
Mergi3train <- Mergi3day[training_samples,]
Mergi3test <- Mergi3day[-training_samples,]
mod3 <- lm(avgdaily_demand ~., data=Mergi3train)
predictions <- mod3 %>%
predict(Mergi3test)
compare <- data.frame(actual = Mergi3test$avgdaily_demand,
predicted = predictions)
error <- RMSE(predictions,Mergi3test$avgdaily_demand)
rsq(compare$actual,compare$predicted)
#1 day = 0.961867
#2 days = 0.9728684
#3 days = 0.9758512
#4 days = 0.973445
#5 days = 0.9712492
#6 days = 0.9701669
