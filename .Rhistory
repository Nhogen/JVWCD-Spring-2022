# Train
trainpred <- mod1%>%
predict(train)
# Predictions with 95% CI
trainpredCI <- mod1 %>%
predict(train, interval = "confidence")
compare <- data.frame(actual = train$avg_demand_mgd,
predicted = trainpred)
error <- RMSE(trainpred,train$avg_demand_mgd)
ttarg<-train$avg_demand_mgd
print("Train")
mmetric(ttarg,trainpred,metrics_list)
print("_____________________________________")
# 2022
predictions <- mod1%>%
predict(Avg4_2022)
# Predictions with 95% CI
predictions2022CI <- mod1 %>%
predict(Avg4_2022, interval = "confidence")
compare <- data.frame(actual = Avg4_2022$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_2022$avg_demand_mgd)
targ<-Avg4_2022$avg_demand_mgd
print("2022")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Spring
predictions <- mod1%>%
predict(Avg4_Sp)
# Predictions with 95% CI
predictions <- mod1%>%
predict(Avg4_Sp, interval = "confidence")
compare <- data.frame(actual = Avg4_Sp$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_Sp$avg_demand_mgd)
targ<-Avg4_Sp$avg_demand_mgd
print("Spring")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Summer
predictions <- mod1%>%
predict(Avg4_Su)
# Predictions with 95% CI
predictions <- mod1%>%
predict(Avg4_Su, interval = "confidence")
compare <- data.frame(actual = Avg4_Su$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_Su$avg_demand_mgd)
targ<-Avg4_Su$avg_demand_mgd
print("Summer")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Fall
predictions <- mod1%>%
predict(Avg4_F)
# Predictions with 95% CI
predictions <- mod1%>%
predict(Avg4_F, interval = "confidence")
compare <- data.frame(actual = Avg4_F$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_F$avg_demand_mgd)
targ<-Avg4_F$avg_demand_mgd
print("Fall")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Winter
predictions <- mod1%>%
predict(Avg4_W)
# Predictions with 95% CI
predictions <- mod1%>%
predict(Avg4_W, interval = "confidence")
compare <- data.frame(actual = Avg4_W$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_W$avg_demand_mgd)
targ<-Avg4_W$avg_demand_mgd
print("Winter is coming (House Stark)")
mmetric(targ,predictions,metrics_list)
MLP <- make_Weka_classifier("weka/classifiers/functions/MultilayerPerceptron")
l <- 0.3
m <- 0.2
n <-100
h <- 'a'
mod2 <- MLP(avg_demand_mgd ~ ., data = train, control = Weka_control(L=l,M=m, N=n, H=h))
# Train
trainpred <- mod2%>%
predict(train)
# Predictions with 95% CI
trainpredCI <- mod2 %>%
predict(train, interval = "confidence")
compare <- data.frame(actual = train$avg_demand_mgd,
predicted = trainpred)
error <- RMSE(trainpred,train$avg_demand_mgd)
ttarg<-train$avg_demand_mgd
print("Train")
mmetric(ttarg,trainpred,metrics_list)
print("_____________________________________")
# 2022
predictions <- mod2%>%
predict(Avg4_2022)
# Predictions with 95% CI
predictions <- mod2 %>%
predict(Avg4_2022, interval = "confidence")
compare <- data.frame(actual = Avg4_2022$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_2022$avg_demand_mgd)
targ<-Avg4_2022$avg_demand_mgd
print("2022")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Spring
predictions <- mod2%>%
predict(Avg4_Sp)
# Predictions with 95% CI
predictions <- mod2 %>%
predict(Avg4_Sp, interval = "confidence")
compare <- data.frame(actual = Avg4_Sp$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_Sp$avg_demand_mgd)
targ<-Avg4_Sp$avg_demand_mgd
print("Spring")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Summer
predictions <- mod2%>%
predict(Avg4_Su)
# Predictions with 95% CI
predictions <- mod2 %>%
predict(Avg4_Su, interval = "confidence")
compare <- data.frame(actual = Avg4_Su$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_Su$avg_demand_mgd)
targ<-Avg4_Su$avg_demand_mgd
print("Summer")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Fall
predictions <- mod2%>%
predict(Avg4_F)
# Predictions with 95% CI
predictions <- mod2 %>%
predict(Avg4_F, interval = "confidence")
compare <- data.frame(actual = Avg4_F$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_F$avg_demand_mgd)
targ<-Avg4_F$avg_demand_mgd
print("Fall")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Winter
predictions <- mod2%>%
predict(Avg4_W)
# Predictions with 95% CI
predictions <- mod2 %>%
predict(Avg4_W, interval = "confidence")
compare <- data.frame(actual = Avg4_W$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_W$avg_demand_mgd)
targ<-Avg4_W$avg_demand_mgd
print("Winter is coming (House Stark)")
mmetric(targ,predictions,metrics_list)
mod3 <- IBk(avg_demand_mgd ~ ., data = train, control = Weka_control(K = 35, I= TRUE))
# Train
trainpred <- mod3%>%
predict(train)
# Predictions with 95% CI
trainpredCI <- mod3 %>%
predict(train, interval = "confidence")
compare <- data.frame(actual = train$avg_demand_mgd,
predicted = trainpred)
error <- RMSE(trainpred,train$avg_demand_mgd)
ttarg<-train$avg_demand_mgd
print("Train")
mmetric(ttarg,trainpred,metrics_list)
print("_____________________________________")
# 2022
predictions <- mod3%>%
predict(Avg4_2022)
# Predictions with 95% CI
predictions <- mod3 %>%
predict(Avg4_2022, interval = "confidence")
compare <- data.frame(actual = Avg4_2022$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_2022$avg_demand_mgd)
targ<-Avg4_2022$avg_demand_mgd
print("2022")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Spring
predictions <- mod3%>%
predict(Avg4_Sp)
# Predictions with 95% CI
predictions <- mod3 %>%
predict(Avg4_Sp, interval = "confidence")
compare <- data.frame(actual = Avg4_Sp$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_Sp$avg_demand_mgd)
targ<-Avg4_Sp$avg_demand_mgd
print("Spring")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Summer
predictions <- mod3%>%
predict(Avg4_Su)
# Predictions with 95% CI
predictions <- mod3 %>%
predict(Avg4_Su, interval = "confidence")
compare <- data.frame(actual = Avg4_Su$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_Su$avg_demand_mgd)
targ<-Avg4_Su$avg_demand_mgd
print("Summer")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Fall
predictions <- mod3%>%
predict(Avg4_F)
# Predictions with 95% CI
predictions <- mod3 %>%
predict(Avg4_F, interval = "confidence")
compare <- data.frame(actual = Avg4_F$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_F$avg_demand_mgd)
targ<-Avg4_F$avg_demand_mgd
print("Fall")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Winter
predictions <- mod3%>%
predict(Avg4_W)
# Predictions with 95% CI
predictions <- mod3 %>%
predict(Avg4_W, interval = "confidence")
compare <- data.frame(actual = Avg4_W$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_W$avg_demand_mgd)
targ<-Avg4_W$avg_demand_mgd
print("Winter is coming (House Stark)")
mmetric(targ,predictions,metrics_list)
set.seed(6496)
mod4 <- ksvm(avg_demand_mgd ~ ., data = train, kernal="polydot", C=10)
# Train
trainpred <- mod4%>%
predict(train)
# Predictions with 95% CI
trainpredCI <- mod4 %>%
predict(train)
compare <- data.frame(actual = train$avg_demand_mgd,
predicted = trainpred)
error <- RMSE(trainpred,train$avg_demand_mgd)
ttarg<-train$avg_demand_mgd
print("Train")
mmetric(ttarg,trainpred,metrics_list)
print("_____________________________________")
# 2022
predictions <- mod4%>%
predict(Avg4_2022)
# Predictions with 95% CI
predictions <- mod4 %>%
predict(Avg4_2022)
compare <- data.frame(actual = Avg4_2022$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_2022$avg_demand_mgd)
targ<-Avg4_2022$avg_demand_mgd
print("2022")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Spring
predictions <- mod4%>%
predict(Avg4_Sp)
# Predictions with 95% CI
predictions <- mod4 %>%
predict(Avg4_Sp)
compare <- data.frame(actual = Avg4_Sp$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_Sp$avg_demand_mgd)
targ<-Avg4_Sp$avg_demand_mgd
print("Spring")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Summer
predictions <- mod4%>%
predict(Avg4_Su)
# Predictions with 95% CI
predictions <- mod4 %>%
predict(Avg4_Su)
compare <- data.frame(actual = Avg4_Su$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_Su$avg_demand_mgd)
targ<-Avg4_Su$avg_demand_mgd
print("Summer")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Fall
predictions <- mod4%>%
predict(Avg4_F)
# Predictions with 95% CI
predictions <- mod4 %>%
predict(Avg4_F)
compare <- data.frame(actual = Avg4_F$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_F$avg_demand_mgd)
targ<-Avg4_F$avg_demand_mgd
print("Fall")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Winter
predictions <- mod4%>%
predict(Avg4_W)
# Predictions with 95% CI
predictions <- mod4 %>%
predict(Avg4_W)
compare <- data.frame(actual = Avg4_W$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_W$avg_demand_mgd)
targ<-Avg4_W$avg_demand_mgd
print("Winter is coming (House Stark)")
mmetric(targ,predictions,metrics_list)
# have to create a time series demand object
y <- ts(train$avg_demand_mgd, frequency = 365)
# remove avg_demand_mgd from train data
train3 <- train %>%
select(-avg_demand_mgd)
summary(train2)
# have to create a time series demand object
y <- ts(train$avg_demand_mgd, frequency = 365)
# remove avg_demand_mgd from train data
train2 <- train %>%
select(-avg_demand_mgd)
summary(train2)
# generate ts model
tslm_mod <- tslm(y ~., data = train2)
summary(tslm_mod)
fit <- fitted(tslm_mod)
#graph showing actuals vs fitted
autoplot(y) + autolayer(fit)
set.seed(6496)
pred_2022 <- forecast.tslm(tslm_mod, newdata = Avg4_2022)
set.seed(6496)
pred_2022 <- forecast(tslm_mod, newdata = Avg4_2022)
summary(pred_2022)
predictions <- pred_2022 %>% data.frame(pred_2022)
predictions <- predictions$Point.Forecast
summary(predictions)
set.seed(6496)
pred_2022 <- forecast(tslm_mod, newdata = Avg4_2022)
summary(pred_2022)
predictions <- pred_2022 %>% data.frame(pred_2022)
predictions <- predictions$Point.Forecast
compare <- data.frame(actual = Avg4_2022$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_2022$avg_demand_mgd)
targ<-Avg4_2022$avg_demand_mgd
print("2022")
mmetric(targ,predictions,metrics_list)
set.seed(6496)
# Train
pred_2022 <- forecast(tslm_mod, newdata = train)
predictions <- pred_2022 %>% data.frame(pred_2022)
predictions <- predictions$Point.Forecast
compare <- data.frame(actual = train$avg_demand_mgd,
predicted = predictions)
error <- RMSE(trainpred,train$avg_demand_mgd)
ttarg<-train$avg_demand_mgd
print("Train")
mmetric(ttarg,trainpred,metrics_list)
print("_____________________________________")
#2022
pred_2022 <- forecast(tslm_mod, newdata = Avg4_2022)
predictions <- pred_2022 %>% data.frame(pred_2022)
predictions <- predictions$Point.Forecast
compare <- data.frame(actual = Avg4_2022$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_2022$avg_demand_mgd)
targ<-Avg4_2022$avg_demand_mgd
print("2022")
mmetric(targ,predictions,metrics_list)
set.seed(6496)
# Train
pred_2022 <- forecast(tslm_mod, newdata = train)
predictions <- pred_2022 %>% data.frame(pred_2022)
predictions <- predictions$Point.Forecast
compare <- data.frame(actual = train$avg_demand_mgd,
predicted = predictions)
error <- RMSE(trainpred,train$avg_demand_mgd)
ttarg<-train$avg_demand_mgd
print("Train")
mmetric(ttarg,trainpred,metrics_list)
print("_____________________________________")
#2022
pred_2022 <- forecast(tslm_mod, newdata = Avg4_2022)
predictions <- pred_2022 %>% data.frame(pred_2022)
predictions <- predictions$Point.Forecast
compare <- data.frame(actual = Avg4_2022$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_2022$avg_demand_mgd)
targ<-Avg4_2022$avg_demand_mgd
print("2022")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
#Spring
pred_2022 <- forecast(tslm_mod, newdata = Avg4_Sp)
predictions <- pred_2022 %>% data.frame(pred_2022)
predictions <- predictions$Point.Forecast
compare <- data.frame(actual = Avg4_Sp$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_Sp$avg_demand_mgd)
targ<-Avg4_Sp$avg_demand_mgd
print("Spring")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Summer
pred_2022 <- forecast(tslm_mod, newdata = Avg4_Su)
predictions <- pred_2022 %>% data.frame(pred_2022)
predictions <- predictions$Point.Forecast
compare <- data.frame(actual = Avg4_Su$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_Su$avg_demand_mgd)
targ<-Avg4_Su$avg_demand_mgd
print("Summer")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Fall
pred_2022 <- forecast(tslm_mod, newdata = Avg4_F)
predictions <- pred_2022 %>% data.frame(pred_2022)
predictions <- predictions$Point.Forecast
compare <- data.frame(actual = Avg4_F$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_F$avg_demand_mgd)
targ<-Avg4_F$avg_demand_mgd
print("Fall")
mmetric(targ,predictions,metrics_list)
print("_____________________________________")
# Winter
pred_2022 <- forecast(tslm_mod, newdata = Avg4_W)
predictions <- pred_2022 %>% data.frame(pred_2022)
predictions <- predictions$Point.Forecast
compare <- data.frame(actual = Avg4_W$avg_demand_mgd,
predicted = predictions)
error <- RMSE(predictions,Avg4_W$avg_demand_mgd)
targ<-Avg4_W$avg_demand_mgd
print("Winter is coming (House Stark)")
mmetric(targ,predictions,metrics_list)
# test
trainpred <- mod3%>%
predict(test)
compare <- data.frame(actual = test$avg_demand_mgd,
predicted = trainpred)
error <- RMSE(trainpred,test$avg_demand_mgd)
ttarg<-test$avg_demand_mgd
print("Test")
mmetric(ttarg,trainpred,metrics_list)
df <- Avg4
target <- 11
seedVal <- 6496
metrics_list = c("R2","MAE","MAPE","RMSE")
cv_function <- function(df, target, nFolds, seedVal, metrics_list)
{
# create folds using the assigned values
set.seed(seedVal)
folds = createFolds(df[,target],nFolds)
# The lapply loop
cv_results <- lapply(folds, function(x)
{
# data preparation:
test_target <- df[x,target]
test_input <- df[x,-target]
train_target <- df[-x,target]
train_input <- df[-x,-target]
model <- mod3
pred <- predict(model, test_input)
return(mmetric(test_target,pred,metrics_list))
})
cv_results_m <- as.matrix(as.data.frame(cv_results))
cv_mean<- as.matrix(rowMeans(cv_results_m))
cv_sd <- as.matrix(rowSds(cv_results_m))
colnames(cv_mean) <- "Mean"
colnames(cv_sd) <- "Sd"
cv_all <- cbind(cv_results_m, cv_mean, cv_sd)
kable(t(cv_all),digits=2)
}
cv_function(Avg4, target, 10, seedVal, metrics_list)
df <- Avg4_W
target <- 11
seedVal <- 6496
metrics_list = c("R2","MAE","MAPE","RMSE")
nFolds = 3
cv_function <- function(df, target, nFolds, seedVal, metrics_list)
{
# create folds using the assigned values
set.seed(seedVal)
folds = createFolds(df[,target],nFolds)
# The lapply loop
cv_results <- lapply(folds, function(x)
{
# data preparation:
test_target <- df[x,target]
test_input <- df[x,-target]
train_target <- df[-x,target]
train_input <- df[-x,-target]
model <- mod3
pred <- predict(model, test_input)
return(mmetric(test_target,pred,metrics_list))
})
cv_results_m <- as.matrix(as.data.frame(cv_results))
cv_mean<- as.matrix(rowMeans(cv_results_m))
cv_sd <- as.matrix(rowSds(cv_results_m))
colnames(cv_mean) <- "Mean"
colnames(cv_sd) <- "Sd"
cv_all <- cbind(cv_results_m, cv_mean, cv_sd)
kable(t(cv_all),digits=2)
}
cv_function(Avg4, target, nFolds, seedVal, metrics_list)
