"0","list.of.packages <- c(""tidyverse"", ""lubridate"",""chron"",""knitr"")"
"0","new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,""Package""])]"
"0","if(length(new.packages)) install.packages(new.packages)"
"0",""
"0","library(tidyverse)"
"2","Registered S3 methods overwritten by 'dbplyr':
  method         from
  print.tbl_lazy     
  print.tbl_sql      
"
"2","[37m-- [1mAttaching packages[22m ----------------------------------------- tidyverse 1.3.1 --[39m
"
"2","[37m[32mv[37m [34mggplot2[37m 3.3.5     [32mv[37m [34mpurrr  [37m 0.3.4
[32mv[37m [34mtibble [37m 3.1.6     [32mv[37m [34mdplyr  [37m 1.0.7
[32mv[37m [34mtidyr  [37m 1.1.4     [32mv[37m [34mstringr[37m 1.4.0
[32mv[37m [34mreadr  [37m 2.1.0     [32mv[37m [34mforcats[37m 0.5.1[39m
"
"2","[37m-- [1mConflicts[22m -------------------------------------------- tidyverse_conflicts() --
[31mx[37m [34mdplyr[37m::[32mfilter()[37m masks [34mstats[37m::filter()
[31mx[37m [34mdplyr[37m::[32mlag()[37m    masks [34mstats[37m::lag()[39m
"
"0","library(lubridate)"
"2","
Attaching package: â€˜lubridateâ€™

"
"2","The following objects are masked from â€˜package:baseâ€™:

    date, intersect, setdiff, union

"
"0","library(chron)"
"2","
Attaching package: â€˜chronâ€™

"
"2","The following objects are masked from â€˜package:lubridateâ€™:

    days, hours, minutes, seconds, years

"
"0","library(knitr)"
"0",""
"0","#read in data. Change names to be more readable and make hourly demand numeric"
"0","sd <- read.csv(""2_year_system_demand.csv"")%>%"
"0","  rename('hourly_demand' = 'Hourly.Demand..cfs.',"
"0","         'date_time' = 'Read.Date.Time')%>%"
"0","  mutate(hourly_demand = as.numeric(hourly_demand),"
"0","         hourly_demand = ifelse(is.na(hourly_demand),0,hourly_demand)) #What do we do with NA's???"
"2","Warning:"
"2"," Problem with `mutate()` column `hourly_demand`.
[34mi[39m `hourly_demand = as.numeric(hourly_demand)`.
[34mi[39m NAs introduced by coercion
"
"0","#Make Date and Time match a consistent format with the Weather Data"
"0","sd2 <- as.data.frame(str_split_fixed(sd$date_time, "" "", 3))%>%"
"0","  rename(date = V1, time = V2, am_or_pm = V3)%>%"
"0","  mutate(datetime_str = paste(date, time, am_or_pm),"
"0","         datetime = as.POSIXct(strptime(datetime_str, format = ""%m/%d/%y %I:%M %p"")),"
"0","         datetime_military = strftime(datetime, format = ""%m/%d/%Y %H:%M"")) %>%"
"0","  select(datetime,datetime_military)"
"0","sd3 <-as.data.frame(str_split_fixed(sd2$datetime_military, "" "", 2))%>%"
"0","  rename(date = V1, time = V2)"
"0","sd4 <-as.data.frame(str_split_fixed(sd3$date, ""/"", 3))%>%"
"0","  rename(CalendarMonth = V1,  CalendarDay = V2, CalendarYear = V3)"
"0","#Throw it all together"
"0","sd <- cbind(sd,sd2,sd3,sd4)%>%"
"0","  select(-date_time)"
"0","#Get rid of temp dfs"
"0","remove(sd2,sd3,sd4)"
"0",""
"0","#The names and dates in this table do not need much conversion"
"0","wa <- read.csv(""weather_sl_airport.csv"")"
"0","  "
"0","  "
"0",""
"0","sp <- read.csv(""system_demand_by_point_type.csv"")%>%"
"0","  rename('date_time' = 'Read.Date.Time',"
"0","         'well_flow_cfs' = 'Well.Flow..cfs.',"
"0","         'purchased_flow_cfs' = 'Purchased.Flow..cfs.',"
"0","         'transported_flow_cfs' = 'Transported.Flow..cfs.',"
"0","         'treated_flow_cfs' = 'Treated.Flow..cfs.',"
"0","         'injected_flow_cfs' = 'Injected.Flow..cfs.',"
"0","         'reservoir_trend_cfs' = 'Reservoir.Trend..cfs.',)"
"0","#Make Date and Time match a consistant format with the Weather Data"
"0","sp2 <- as.data.frame(str_split_fixed(sp$date_time, "" "", 3))%>%"
"0","  rename(date = V1, time = V2, am_or_pm = V3)%>%"
"0","  mutate(datetime_str = paste(date, time, am_or_pm),"
"0","         datetime = as.POSIXct(strptime(datetime_str, format = ""%m/%d/%y %I:%M %p"")),"
"0","         datetime_military = strftime(datetime, format = ""%m/%d/%Y %H:%M"")) %>%"
"0","  select(datetime,datetime_military)"
"0","sp3 <-as.data.frame(str_split_fixed(sp2$datetime_military, "" "", 2))%>%"
"0","  rename(date = V1, time = V2)"
"0","sp4 <-as.data.frame(str_split_fixed(sp3$date, ""/"", 3))%>%"
"0","  rename(CalendarMonth = V1,  CalendarDay = V2, CalendarYear = V3)"
"0","#Throw it all together"
"0","sp <- cbind(sp,sp2,sp3,sp4)%>%"
"0","  select(-date_time)"
"0","#Get rid of temp dfs"
"0","remove(sp2,sp3,sp4)"
